
function main(workbook: ExcelScript.Workbook) {
   
    let selectedSheet = workbook.getActiveWorksheet();
    const startRow = 2; // Starting row
    const numRanges = 64; // Number of ranges to sort
    let isg_idx = 0;
    let serdes_string = "  isg:\n";

    // Sort by ISG 
	selectedSheet.getRange("A1:O513").getSort().apply([{ key: 5, ascending: true }], false, true, ExcelScript.SortOrientation.rows);

    // Come out SERDES mapping and polarity according to ISG sequence
    for (let n = startRow; n < startRow + numRanges * 8; n += 8) {
        const startCell = selectedSheet.getCell(n - 1, 8); // Column I
        const endCell = selectedSheet.getCell(n + 6, 9);   // Column J
        const range = selectedSheet.getRangeByIndexes(startCell.getRowIndex(), startCell.getColumnIndex(), 8, 2);
        range.getSort().apply([{ key: 1, ascending: true }], false, false, ExcelScript.SortOrientation.rows);

        let qstring="";
        // Convert Lane Swap
        qstring = '"' + isg_idx + '"';
        serdes_string += "  - id: " + qstring + "\n";
        const prange = selectedSheet.getRangeByIndexes(startCell.getRowIndex(), startCell.getColumnIndex(), 8, 1);
        const values = prange.getValues(); 
        let concatenatedString = "";
        for (let i = 0; i < values.length; i++) {
            concatenatedString += values[i][0]; // Assuming single column
        }
        const Cell = selectedSheet.getCell(n - 1, 12);   // Column M
        Cell.setValue(concatenatedString);
        qstring = '"' + concatenatedString + '"';
        serdes_string += "    lane_swap: " + qstring + "\n";

        // Revert back the Chip Lane soring
        range.getSort().apply([{ key: 0, ascending: true }], false, false, ExcelScript.SortOrientation.rows);

        // Convert TX PN Polarity
        const txCell = selectedSheet.getCell(n - 1, 10); // Column K
        const txrange = selectedSheet.getRangeByIndexes(txCell.getRowIndex(), txCell.getColumnIndex(), 8, 1);
        const txvalues = txrange.getValues(); 
        let txString = "";
        for (let i = 0; i < txvalues.length; i++) {
            if (txvalues[i][0] === "") {
                txString += "0";
            } else if (txvalues[i][0] === "Y") {
                txString += "1";
            } else {
                console.log("The cell contains a different value: ");
            }
        }
        const txCell2 = selectedSheet.getCell(n - 1, 13);   // Column N
        txCell2.setValue(txString);

        // Convert RX PN Polarity
        const rxCell = selectedSheet.getCell(n - 1, 11); // Column L
        const rxrange = selectedSheet.getRangeByIndexes(rxCell.getRowIndex(), rxCell.getColumnIndex(), 8, 1);
        const rxvalues = rxrange.getValues(); 
        let rxString = "";
        for (let i = 0; i < rxvalues.length; i++) {
            if (rxvalues[i][0] === "") {
                rxString += "0";
            } else if (rxvalues[i][0] === "Y") {
                rxString += "1";
            } else {
                console.log("The cell contains a different value: ");
            }
        }
        const rxCell2 = selectedSheet.getCell(n - 1, 14);   // Column O
        rxCell2.setValue(rxString);

        qstring = '"' + rxString + '"';
        serdes_string += "    rx_polarity: " + qstring + "\n";
        serdes_string += "    tx_polarity: " + '"' + txString + '"' + "\n";
        isg_idx += 1;
    }

    //// Program all SERDES related information on Column I, Row 515
    //const yamlCell = selectedSheet.getCell(515, 8); // Column I, ROW 515
    //yamlCell.setValue(serdes_string);

    // Sort by Device Front Port
    let port_config = "  devports:\n"
    port_config += '  - id: "0"\n'
    port_config += '    sysport: "1000"\n'
    port_config += '    type: "cpu"\n'
	selectedSheet.getRange("A1:O513").getSort().apply([{ key: 0, ascending: true }], false, true, ExcelScript.SortOrientation.rows);
    for (let n = startRow; n < startRow + numRanges ; n += 1) {
        const isg_cell = selectedSheet.getCell(n - 1, 5); // Column F, ISG
        const port_cell = selectedSheet.getCell(n - 1, 0); // Column A, Device Front Port 
        const isg_value = isg_cell.getValue();
        const port_value = port_cell.getValue();

        let port_string = '  - fec: "KPFEC"\n';
        port_string += '    id: "' + port_value + '"\n';
        port_string += '    lanes: "0:8"\n';
        port_string += '    serdes_group: "' + isg_value + '"\n';
        port_string += '    speed: "800G"\n';
        port_string += '    sysport: "' + port_value + '"\n';
        port_string += '    type: "eth"\n';

        port_config += port_string;
    }

    let yaml_string = port_config + serdes_string;
    // Program all dev front ports and isg serdes mapping on Column A, Row 515
    const yamlCell = selectedSheet.getCell(515, 0); // Column A, ROW 515
    yamlCell.setValue(yaml_string);

    // Sort by IB and PIC
    selectedSheet.getRange("A1:O513").getSort().apply([{key: 6, ascending: true}, {key: 7, ascending: true}], false, true, ExcelScript.SortOrientation.rows);
}

